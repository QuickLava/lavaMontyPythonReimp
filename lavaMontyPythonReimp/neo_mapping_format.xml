<?xml version="1.0"?> 
<movesetPatch name = "External GFX File Replacement">
	<targets>
		<command name = "Graphic Effect" signature = "0x11001000" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Attached)" signature = "0x11010A00" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Attached)(+100)" signature = "0x11010B00" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Attached 2)" signature = "0x11020A00" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Stepping)" signature = "0x111A1000" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Landing)" signature = "0x111B1000" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Tumbling)" signature = "0x111C1000" paramIndex="0" paramType="0"/>
		<command name = "Graphic Effect (Attached 19)" signature = "0x11190A00" paramIndex="0" paramType="0"/>
		<command name = "Terminate Graphic Effect" signature = "0x11150300" paramIndex="0" paramType="0"/>
		<command name = "Sword Glow" signature = "11031400" paramIndex = "0xB" paramType="0"/>
		<command name = "Sword/Hammer Glow" signature = "11041700" paramIndex = "11" paramType="0"/>
	</targets>
	<!--The list of modifications to check through while applying this patch.-->
	<modifications>
		<!--Mod: An individual modification. When a mod is triggered, all of its "actions" will be executed on the target parameter, in order from top to bottom.-->
		<!--Match: The value checked against in order to trigger this modification.-->
		<!--Notably, an 'X' is treated as a passthrough for the param value being checked against.-->
		<!--So any slot with an X will be replaced with the corresponding slot from the targeted parameter. This affects all equivalency methods.-->
		<!--Eval Condition: The method used to determine the target param's value will trigger a match.-->
		<!--  0: [EQUAL] Matches if the values are equal to each other.-->
		<!--  1: [NOT_EQUAL] Matches if the values are NOT equal to each other.-->
		<!--  2: [GREATER] Matches if the match value is GREATER THAN the target param value.-->
		<!--  3: [GREATER_OE] Matches if the match value is GREATER THAN OR EQUAL TO the target param value.-->
		<!--  4: [LESSER] Matches if the match value is LESSER THAN the target param value.-->
		<!--  5: [LESSER_OE] Matches if the match value is LESSER THAN OR EQUAL the target param value.-->
		<!--  6: [BIT_AND] Matches if any bits are set after the match value is Bitwise ANDed together with the target param value.-->
		<!--  7: [BIT_XOR] Matches if nny bits are set after the match value is Bitwise XORed together with the target param value.-->
		<!--ExtraCondition: Specifies an extra condition which must be met in order for the mod to be applied.-->
		<!--  0: [REQ_NULL] Does nothing. This is the value used when no value is provided, though it may also be used to explicitly disable this feature.-->
		<!--  1: [REQ_PREV] Requires that the mod immediately preceding this one was triggered.-->
		<!--  2: [REQ_NOT_PREV]	Requires that the mod immediately preceding this one was NOT triggered.-->
		<!--Lock: This acts as a mask, preventing changes to the original values of digits in any slot marked with a 1.-->
		<!--So, for instance, a lock mask of "11110000" will lock a value's top 4 digits, ensuring that they are unchanged by any actions in this modification. -->
		<!--In the event that either parameter (match or lock) is not a full 8 characters long, it's front will be padded with zeroes (eg. "101" will become "00000101").-->
		<!--ParamIndexRedirect: This can be used to cause actions to be instead taken on some other parameter of this function, rather than on the one which triggered the match.-->
		<!--If a value is not explicitly provided this feature is disabled, though it may also be explicitly disabled by providing an index below 0.-->
		<mod match = "000DXXXX" evalMethod = "0" extraCondition = "0" lock = "00000000" paramIndexRedirect = "-1">
			<!--Type: Defines the action to be taken.-->
			<!--  00: [NOP] Does nothing. Useful if you just want the program to print matches to the console without modifying them.-->
			<!--  01: [REP] Replaces the found value with the provided one.-->
			<!--  A0: [INT_ADD] Adds the provided value (interpreted as an integer) to the target one.-->
			<!--  A1: [INT_SUB] Subtracts the provided value (interpreted as an integer) from the target one.-->
			<!--  A2: [INT_MUL] Multiplies the provided value (interpreted as an integer) into the provided one.-->
			<!--  A3: [INT_DIV] Divides the target value by the provided one (interpreted as an integer).-->
			<!--  A4: [FLT_ADD] Adds the provided value (interpreted as an float) to the target one.-->
			<!--  A5: [FLT_SUB] Subtracts the provided value (interpreted as an float) from the target one.-->
			<!--  A6: [FLT_MUL] Multiplies the provided value (interpreted as an float) into the provided one.-->
			<!--  A7: [FLT_DIV] Divides the target value by the provided one (interpreted as an float).-->
			<!--  B0: [BIT_AND] Bitwise ANDs the provided value into the target value.-->
			<!--  B1: [BIT_OR] Bitwise ORs the provided value into the target value.-->
			<!--  B2: [BIT_XOR Bitwise XORs the provided value into the target value.-->
			<!--  B3: [BIT_SHIFT_L] Shifts the target value to the left by the provided number of bits.-->
			<!--  B4: [BIT_SHIFT_R] Shifts the target value to the right by the provided number of bits.-->
			<!--  B5: [BIT_ROTATE_L] Rotates the target value to the left by the provided number of bits.-->
			<!--  B6: [BIT_ROTATE_L] Rotates the target value to the right by the provided number of bits.-->
			<!--  C0: [PARAM_REDIR] Change the targeted parameter index to the provided value.-->
			<!--Value:-->
			<!--The value to be used in the corresponding action.-->
			<action type = "01" value = "01770000"/>
		</mod>
		<mod match = "0017XXXX" lock = "00001111">
			<action type = "01" value = "01780000"/>
		</mod>
		<mod match = "000EXXXX" lock = "00001111">
			<action type = "01" value = "01790000"/>
		</mod>
		<mod match = "0012XXXX" lock = "00001111">
			<action type = "01" value = "017A0000"/>
		</mod>
	</modifications>
</movesetPatch>

<movesetPatch name = "Float Param Test">
	<targets>
		<command name = "Graphic Effect" signature = "0x11001000" paramIndex="8"/>
		<command name = "Graphic Effect (Attached)" signature = "0x11010A00" paramIndex="8"/>
	</targets>
	<modifications>
		<mod match = "XXXXXXXX">
			<action type = "0xA4" value = "0000EC60"/>
			<action type = "0xA5" value = "0000AA00"/>
			<action type = "0xA6" value = "0001D4C0"/>
			<action type = "0xA7" value = "0001D4C0"/>
		</mod>
	</modifications>
</movesetPatch>

<movesetPatch name = "Int Param Test">
	<targets>
		<command name = "Graphic Effect" signature = "0x11001000" paramIndex="0"/>
		<command name = "Graphic Effect (Attached)" signature = "0x11010A00" paramIndex="0"/>
	</targets>
	<modifications>
		<mod match = "0178XXXX" lock = "11110000">
			<action type = "0xA0" value = "00000004"/>
			<action type = "0xA1" value = "00000004"/>
			<action type = "0xA2" value = "00000004"/>
			<action type = "0xA3" value = "00000004"/>
		</mod>
	</modifications>
</movesetPatch>

<movesetPatch name = "Bit Manip Test">
	<targets>
		<command name = "Graphic Effect" signature = "0x11001000" paramIndex="0"/>
		<command name = "Graphic Effect (Attached)" signature = "0x11010A00" paramIndex="0"/>
	</targets>
	<modifications>
		<mod match = "0178XXXX" lock = "11110000">
			<action type = "0xB0" value = "FFFFFFFF"/>
			<action type = "0xB2" value = "FFFFFFFF"/>
			<action type = "0xB2" value = "FFFFFFFF"/>
			<action type = "0xB1" value = "0A000000"/>
			<action type = "0xB5" value = "00000004"/>
			<action type = "0xB6" value = "00000004"/>
			<action type = "0xB3" value = "00000004"/>
			<action type = "0xB4" value = "00000004"/>
		</mod>
	</modifications>
</movesetPatch>

<movesetPatch name = "Marth Aura Tipper Chain Test">
	<targets>
		<command name = "Offensive Collision" signature = "0x06000D00" paramIndex="0"/>
		<command name = "Special Offensive Collision" signature = "0x06150F00" paramIndex="0"/>
	</targets>
	<modifications>
		<mod match = "0041XXXX">
		</mod>
		<mod match = "000493E0" extraCondition = "1" evalMethod = "5" paramIndexRedirect = "8">
		</mod>
		<mod match = "XXXXXXXX" extraCondition = "1" lock = "11111100" paramIndexRedirect = "12">
			<action type = "0xB0" value = "FFFFFFE0"/>
		</mod>
		<mod match = "XXXXXXXX" extraCondition = "1" lock = "11111100" paramIndexRedirect = "12">
			<action type = "0xB1" value = "00000014"/>
		</mod>
		<mod match = "XXXXXXXX" extraCondition = "1" lock = "11110011" paramIndexRedirect = "12">
			<action type = "0xB0" value = "FFFFC1FF"/>
		</mod>
		<mod match = "XXXXXXXX" extraCondition = "1" lock = "11110011" paramIndexRedirect = "12">
			<action type = "0xB1" value = "00000E00"/>
		</mod>
		<mod match = "XXXXXXXX" extraCondition = "1" paramIndexRedirect = "4" lock = "00001111">
			<action type = "0xA0" value = "00010000"/>
		</mod>
	</modifications>
</movesetPatch>

<movesetPatch name = "SFX ID Replacement">
	<targets>
		<command name = "Sound Effect" signature = "0x0A000100" paramIndex="0"/>
		<command name = "Sound Effect 2" signature = "0x0A010100" paramIndex="0"/>
		<command name = "Sound Effect (Transient)" signature = "0x0A020100" paramIndex="0"/>
		<command name = "Stop Sound Effect" signature = "0x0A030100" paramIndex="0"/>
		<command name = "Victory" signature = "0x0A050100" paramIndex="0"/>
		<command name = "Other Sound Effect (landing)" signature = "0x0A090100" paramIndex="0"/>
		<command name = "Other Sound Effect (impact)" signature = "0x0A0A0100" paramIndex="0"/>
		<command name = "Stepping Sound Effect" signature = "0x0A010100" paramIndex="0"/>
	</targets>
	<modifications>
	</modifications>
</movesetPatch>



